h1. MailStyle

MailStyle tries to make sending HTML emails a little less painful.

For a more in depth introduction check out the "Blog Post":http://blog.purifyapp.com/2009/12/30/mailstyle-a-html-email-plugin-for-ruby-on-rails/

It was developed for use on "Purify: Awesome Bug & Issue Tracking":http://purifyapp.com

h2. Install

First install the dependencies:

<pre><code>sudo gem install nokogiri css_parser</code></pre>

Then install MailStyle to your rails app, either as a plugin:

<pre><code>script/plugin install http://github.com/purify/mail_style</code></pre>

Or you can install the gem:

<pre><code># Install gemcutter if you haven't already
sudo gem install gemcutter
sudo gem tumble

# Install MailStyle
sudo gem install mail_style</code></pre>

Then in your <code>environment.rb</code> file add:

<pre><code>config.gem "mail_style"</code></pre>

h2. Usage

Simply add the <code>css</code> method to your deliver actions:

<pre><code>class Notifier < ActionMailer::Base
  def welcome_email
    css :email

    subject 'Welcome Aboard'
    recipients 'someone@example.com'
    from 'jimneath@googlemail.com'
    sent_on Time.now
  end

  def newsletter_email
    css [:email,:newsletter]

    subject 'Newsletter'
    recipients 'someone@example.com'
    from 'jimneath@googlemail.com'
    sent_on Time.now
  end
end</code></pre>

This will look for a css file called _email.css_ in your _public/stylesheets_ folder. The <code>css</code> method can take either a string or a symbol. You can also pass the css file name with or without the .css extension.

h3. Styles in the email's HEAD

By default, &lt;style&gt; elements in the email document's &lt;head&gt; are processed and removed from the &lt;head&gt;.

Style elements with <code>media="print"</code> are ignored.

You can set a special <code>data-immutable="true"</code> attribute on &lt;style&gt; tags you do not want to be processed and removed from the document's &lt;head&gt;.

h2. Image URL Correcting

If you have _default_url_options[:host]_ set in your mailer, then MailStyle will do it's best to make the urls of images absolute.

h4. In your mailer

<pre><code>ActionMailer::Base.default_url_options[:host] = "example.com"</code></pre>

h2. Features

* Write CSS styles inline
* Corrects image urls
* SASS Support

h2. Bugs / Todo

* Improve overall performance
* Add support for less
* Allow users to swap between css_parser and csspool

h2. Contributors

* "Jim Neath":http://jimneath.org
* "Lars Klevans":http://tastybyte.blogspot.com/
* "Jonas Grimfelt":http://github.com/grimen
* "Ben Johnson":http://www.binarylogic.com
* "Istvan Hoka":http://istvanhoka.com/
* "Voraz":http://blog.voraz.com.br

h2. License

(The MIT License)

Copyright &copy; 2009-2010

* "Jim Neath":http://jimneath.org

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‘Software’), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ‘AS IS’, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

